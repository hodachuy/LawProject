// <auto-generated />
using System;
using LawProject.Infrastructure.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace LawProject.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210222080205_AddPost_PostCategory_PostTag")]
    partial class AddPost_PostCategory_PostTag
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("LawProject.Domain.Entities.Activity", b =>
                {
                    b.Property<long>("ActivityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.HasKey("ActivityID");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Agency", b =>
                {
                    b.Property<long>("AgencyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<long?>("PAgencyID")
                        .HasColumnType("bigint");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("AgencyID");

                    b.ToTable("Agencies");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Answer", b =>
                {
                    b.Property<long>("AnswerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccountID")
                        .HasColumnType("text");

                    b.Property<string>("AnswerContent")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("text");

                    b.Property<long>("QuesID")
                        .HasColumnType("bigint");

                    b.HasKey("AnswerID");

                    b.HasIndex("QuesID")
                        .IsUnique();

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Area", b =>
                {
                    b.Property<long>("AreaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<long?>("PAreaID")
                        .HasColumnType("bigint");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("AreaID");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Article", b =>
                {
                    b.Property<long>("ArticleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Contents")
                        .HasColumnType("text");

                    b.Property<string>("DocAttach")
                        .HasColumnType("text");

                    b.Property<int>("Idx")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.Property<long>("LegalID")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ArticleID");

                    b.HasIndex("ItemID");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Chapter", b =>
                {
                    b.Property<long>("ChapID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Contents")
                        .HasColumnType("text");

                    b.Property<int>("Idx")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<long>("LegalID")
                        .HasColumnType("bigint");

                    b.Property<long>("PartID")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ChapID");

                    b.HasIndex("PartID");

                    b.ToTable("Chapters");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.District", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LatiLongTude")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<int>("ProvinceID")
                        .HasColumnType("integer");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.DocumentsType", b =>
                {
                    b.Property<long>("DocID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("LegalGroupID")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<long?>("PDocID")
                        .HasColumnType("bigint");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("DocID");

                    b.ToTable("DocumentsTypes");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Editor", b =>
                {
                    b.Property<long>("EditorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<long>("PEditorID")
                        .HasColumnType("bigint");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("EditorID");

                    b.ToTable("Editors");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Item", b =>
                {
                    b.Property<long>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("ChapID")
                        .HasColumnType("bigint");

                    b.Property<long?>("ChapterChapID")
                        .HasColumnType("bigint");

                    b.Property<string>("Contents")
                        .HasColumnType("text");

                    b.Property<int>("Idx")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("ItemID");

                    b.HasIndex("ChapterChapID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.LawOffice", b =>
                {
                    b.Property<long>("LawOfficeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("DistrictID")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPublish")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LegalRepresentativeName")
                        .HasColumnType("text");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(350)")
                        .HasMaxLength(350);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar")
                        .HasMaxLength(20);

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("integer");

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Website")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.HasKey("LawOfficeID");

                    b.ToTable("LawOffices");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Lawyer", b =>
                {
                    b.Property<long>("LawyerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccountID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("AreaTitles")
                        .HasColumnType("text");

                    b.Property<string>("Areas")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("DistrictID")
                        .HasColumnType("integer");

                    b.Property<int>("ExperienceYear")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPublish")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("LawOfficeID")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(350)")
                        .HasMaxLength(350);

                    b.Property<string>("Organization")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar")
                        .HasMaxLength(20);

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("integer");

                    b.Property<string>("SocialNetwork")
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Website")
                        .HasColumnType("text")
                        .IsUnicode(false);

                    b.HasKey("LawyerID");

                    b.ToTable("Lawyers");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.LegalDocument", b =>
                {
                    b.Property<long>("LegalID")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long?>("AgencyID")
                        .HasColumnType("bigint");

                    b.Property<long?>("AreaID")
                        .HasColumnType("bigint");

                    b.Property<string>("BookAuthor")
                        .HasColumnType("text");

                    b.Property<string>("CombineAgencyIDs")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("DistrictID")
                        .HasColumnType("integer");

                    b.Property<long?>("DocTypeID")
                        .HasColumnType("bigint");

                    b.Property<long?>("EditorID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EnglishContent")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FTS_FullContent")
                        .HasColumnType("text");

                    b.Property<string>("FTS_FullTitle")
                        .HasColumnType("text");

                    b.Property<string>("FooterAppendix")
                        .HasColumnType("text");

                    b.Property<string>("FooterRecipients")
                        .HasColumnType("text");

                    b.Property<string>("FooterSigner")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsHasAppendix")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPublish")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsTraining")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("IssuedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("LegalCode")
                        .HasColumnType("text");

                    b.Property<long>("LegalGroupID")
                        .HasColumnType("bigint");

                    b.Property<long?>("LegalRefID")
                        .HasColumnType("bigint");

                    b.Property<long?>("LegalTypeID")
                        .HasColumnType("bigint");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("integer");

                    b.Property<string>("PublishNo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("SignerName")
                        .HasColumnType("text");

                    b.Property<string>("SigningTitle")
                        .HasColumnType("text");

                    b.Property<int>("StatusValue")
                        .HasColumnType("integer");

                    b.Property<string>("Summary")
                        .HasColumnType("text");

                    b.Property<string>("TableOfContents")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.HasKey("LegalID");

                    b.HasIndex("AgencyID");

                    b.HasIndex("AreaID");

                    b.HasIndex("DistrictID");

                    b.HasIndex("DocTypeID");

                    b.HasIndex("EditorID");

                    b.HasIndex("LegalTypeID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("LegalDocuments");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.LegalDocumentGroup", b =>
                {
                    b.Property<long>("LegalGroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<long?>("Value")
                        .HasColumnType("bigint");

                    b.HasKey("LegalGroupID");

                    b.ToTable("LegalDocumentGroups");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.LegalDocumentRelate", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("LegalRelateID")
                        .HasColumnType("bigint");

                    b.Property<long>("LegalSourceID")
                        .HasColumnType("bigint");

                    b.Property<long>("LegalTypeID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("LegalDocumentRelates");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.LegalDocumentType", b =>
                {
                    b.Property<long>("LegalTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("character varying(350)")
                        .HasMaxLength(350);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.HasKey("LegalTypeID");

                    b.ToTable("LegalDocumentTypes");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Notification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EntityID")
                        .HasColumnType("text");

                    b.Property<string>("EntityName")
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RecipientID")
                        .HasColumnType("integer");

                    b.Property<int?>("SenderID")
                        .HasColumnType("integer");

                    b.Property<int>("StatusValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("URL")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Page", b =>
                {
                    b.Property<long>("PageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("character varying(350)")
                        .HasMaxLength(350);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(350)")
                        .HasMaxLength(350);

                    b.HasKey("PageID");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Part", b =>
                {
                    b.Property<long>("PartID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Contents")
                        .HasColumnType("text");

                    b.Property<int>("Idx")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<long?>("LegalDocumentLegalID")
                        .HasColumnType("bigint");

                    b.Property<long>("LegalID")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("PartID");

                    b.HasIndex("LegalDocumentLegalID");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Post", b =>
                {
                    b.Property<int>("PostID")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(350);

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("character varying(550)")
                        .HasMaxLength(550);

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPublish")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(350)")
                        .HasMaxLength(350);

                    b.Property<int>("PostCategoryID")
                        .HasColumnType("integer");

                    b.Property<int?>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("PostID");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.PostCategory", b =>
                {
                    b.Property<int>("PostCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasMaxLength(250);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("character varying(550)")
                        .HasMaxLength(550);

                    b.Property<int?>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<int?>("ParentID")
                        .HasColumnType("integer");

                    b.HasKey("PostCategoryID");

                    b.ToTable("PostCategories");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.PostTag", b =>
                {
                    b.Property<int>("PostID")
                        .HasColumnType("integer");

                    b.Property<string>("TagID")
                        .HasColumnType("character varying(100)");

                    b.HasKey("PostID", "TagID");

                    b.HasIndex("TagID");

                    b.ToTable("PostTags");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Province", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("text");

                    b.Property<int>("CountryID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<int>("TelephoneCode")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("ZipCode")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Provinces");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Question", b =>
                {
                    b.Property<long>("QuesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccountID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("AreaID")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsTraining")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("text");

                    b.Property<string>("MetaKeyword")
                        .HasColumnType("text");

                    b.Property<string>("QuesCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QuesContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QuesContentText")
                        .HasColumnType("text");

                    b.Property<int>("StatusValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<long>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.HasKey("QuesID");

                    b.HasIndex("AreaID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.QuestionComment", b =>
                {
                    b.Property<long>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccountID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContentText")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("FlaggedAsSpam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("IpAddress")
                        .HasColumnType("text");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSolution")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Pending")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<long>("QuesID")
                        .HasColumnType("bigint");

                    b.Property<long>("VoteLike")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.HasKey("CommentID");

                    b.HasIndex("QuesID");

                    b.ToTable("QuestionComments");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.QuestionTag", b =>
                {
                    b.Property<long>("QuesID")
                        .HasColumnType("bigint");

                    b.Property<string>("TagID")
                        .HasColumnType("character varying(100)");

                    b.HasKey("QuesID", "TagID");

                    b.HasIndex("TagID");

                    b.ToTable("QuestionTags");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Tag", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.UploadFile", b =>
                {
                    b.Property<long>("FileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("AccountID")
                        .HasColumnType("text");

                    b.Property<long?>("AnswerID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CommentID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("LegalID")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuesID")
                        .HasColumnType("bigint");

                    b.HasKey("FileID");

                    b.ToTable("UploadFiles");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Ward", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("DistrictID")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsPublished")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LatiLongTude")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(250)")
                        .HasMaxLength(250);

                    b.Property<int>("SortOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("DistrictID");

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Answer", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.Question", "Question")
                        .WithOne("Answer")
                        .HasForeignKey("LawProject.Domain.Entities.Answer", "QuesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Article", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.Item", null)
                        .WithMany("Articles")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Chapter", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.Part", null)
                        .WithMany("Chapters")
                        .HasForeignKey("PartID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LawProject.Domain.Entities.District", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.Province", "Province")
                        .WithMany("Districts")
                        .HasForeignKey("ProvinceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Item", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.Chapter", null)
                        .WithMany("Items")
                        .HasForeignKey("ChapterChapID");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.LegalDocument", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.Agency", "Agency")
                        .WithMany("LegalDocuments")
                        .HasForeignKey("AgencyID");

                    b.HasOne("LawProject.Domain.Entities.Area", "Area")
                        .WithMany("LegalDocuments")
                        .HasForeignKey("AreaID");

                    b.HasOne("LawProject.Domain.Entities.District", "District")
                        .WithMany()
                        .HasForeignKey("DistrictID");

                    b.HasOne("LawProject.Domain.Entities.DocumentsType", "DocumentsType")
                        .WithMany("LegalDocuments")
                        .HasForeignKey("DocTypeID");

                    b.HasOne("LawProject.Domain.Entities.Editor", "Editor")
                        .WithMany("LegalDocuments")
                        .HasForeignKey("EditorID");

                    b.HasOne("LawProject.Domain.Entities.LegalDocumentGroup", "LegalDocumentGroup")
                        .WithMany("LegalDocuments")
                        .HasForeignKey("LegalID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LawProject.Domain.Entities.LegalDocumentType", "LegalDocumentType")
                        .WithMany("LegalDocuments")
                        .HasForeignKey("LegalTypeID");

                    b.HasOne("LawProject.Domain.Entities.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceID");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Part", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.LegalDocument", null)
                        .WithMany("Parts")
                        .HasForeignKey("LegalDocumentLegalID");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Post", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.PostCategory", "PostCategory")
                        .WithMany("Posts")
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LawProject.Domain.Entities.PostTag", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LawProject.Domain.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Question", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.Area", "Area")
                        .WithMany("Questions")
                        .HasForeignKey("AreaID");
                });

            modelBuilder.Entity("LawProject.Domain.Entities.QuestionComment", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.Question", "Question")
                        .WithMany("QuestionComments")
                        .HasForeignKey("QuesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LawProject.Domain.Entities.QuestionTag", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.Question", "Question")
                        .WithMany("QuestionTags")
                        .HasForeignKey("QuesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LawProject.Domain.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LawProject.Domain.Entities.Ward", b =>
                {
                    b.HasOne("LawProject.Domain.Entities.District", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
